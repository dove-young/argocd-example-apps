## Since {{ .Release.Name }}-PostgreSQL pod is running as user id {{ .Values.postgresql.uid }}
## Local volume PV diretory /k8s/data/postgres must owned by a user id {{ .Values.postgresql.uid }}
##
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: {{ .Release.Name }}-postgresql
    chart: {{ .Release.Name }}-postgresql
    component: {{ .Release.Name }}-postgresql
    release: {{ .Release.Name }}
  name: {{ .Release.Name }}-postgresql
spec:
  podManagementPolicy: OrderedReady
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: {{ .Release.Name }}-postgresql
      component: {{ .Release.Name }}-postgresql
      release: {{ .Release.Name }}
  serviceName: {{ .Release.Name }}-postgresql
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-postgresql
        chart: {{ .Release.Name }}-postgresql
        component: {{ .Release.Name }}-postgresql
        release: {{ .Release.Name }}
    spec:
      initContainers:
      - command:
        - chown 
        - {{ .Values.postgresql.uid }}:{{ .Values.postgresql.uid }}
        - /var/lib/postgresql/data
        image: alpine
        imagePullPolicy: IfNotPresent
        name: chown-on-data-dir
        volumeMounts:
        - mountPath: /var/lib/postgresql/data:z
          name: data
      containers:
      - image: postgres:latest
        imagePullPolicy: IfNotPresent
        name: {{ .Release.Name }}-postgresql
        ports:
        - containerPort: {{ .Values.postgresql.port }}
          name: db
          protocol: TCP
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: false
          runAsNonRoot: true
          runAsUser: {{ .Values.postgresql.uid }}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /var/lib/postgresql/data:z
          name: data
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        fsGroup: {{ .Values.postgresql.uid }}
        runAsNonRoot: true
        runAsUser: {{ .Values.postgresql.uid }}
      terminationGracePeriodSeconds: 30
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      labels:
        app: {{ .Release.Name }}-postgresql
        chart: {{ .Release.Name }}-postgresql
        component: {{ .Release.Name }}-postgresql
        release: {{ .Release.Name }}
      name: data
    spec:
      accessModes:
      - ReadWriteMany
      resources:
        requests:
          storage: 15Gi
      storageClassName: {{ .Release.Name }}-local-storage-postgresql
      volumeMode: Filesystem                
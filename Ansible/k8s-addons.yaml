- hosts: master
  tasks:
    - name: install ansible modules
      yum: 
        name:
          - python
          - python2-openshift
          - python2-pip.noarch
    - name: update pip
      pip:
        name: pip
        extra_args: --upgrade
    - name: install pyhelm
      pip:
        name: pyhelm
        state: present
        extra_args: --upgrade
    - name: get addons
      get_url:
        url: "{{item.url}}"
        dest: "{{item.local}}"
        force: yes
      with_items:
      - {local: "{{playbook_dir}}/addons/ingress-mandatory.yaml",         url: "{{k8s.ingress_install_url}}"}
      - {local: "{{playbook_dir}}/addons/ingress-service-nodeport.yaml",  url: "{{k8s.ingress_service_install_url"}
      - {local: "{{playbook_dir}}/addons/dashboard-recommended.yaml",     url: "{{k8s.dashboard_install_url}}" }
    - name: get helm client
      unarchive:
        src: https://get.helm.sh/helm-v{{helm.version}}-linux-amd64.tar.gz
        dest: /tmp/
        list_files: yes
        remote_src: yes

    - name: init helm
      shell: |
        #tar -xzf /tmp/helm-v{{helm.version}}-linux-amd64.tar.gz
        #ls /tmp
        #ls /tmp/linux-amd64
        chmod +x /tmp/linux-amd64/helm
        mv /tmp/linux-amd64/helm /usr/local/bin/
        helm init --debug
      register: std
    - debug:
        var: std.stdout_lines
    - debug:
        var: std.stderr_lines
    - name: helm cluster-role
      k8s:
        state: present
        definition: 
          apiVersion: rbac.authorization.k8s.io/v1
          kind: ClusterRoleBinding
          metadata:
            name: kube-system-binding-default
          roleRef:
            apiGroup: rbac.authorization.k8s.io
            kind: ClusterRole
            name: cluster-admin
          subjects:
          - kind: ServiceAccount
            name: default
            namespace: kube-system 
    - name: patch raw.py in k8s module   ## workaround to https://github.com/ansible/ansible/issues/64004
      patch:
        src: "{{playbook_dir}}/files/raw.py.patch"
        dest: /usr/lib/python2.7/site-packages/ansible/module_utils/k8s/raw.py

    - name: install addons
      k8s:                  ## yum install -y python2-openshift.noarch  in advance
        state: present
        src: "{{item.name}}"
        kubeconfig: /root/.kube/config
      with_items:                                  ## known issue: https://github.com/ansible/ansible/issues/64129
      - {name: "{{playbook_dir}}/addons/ingress-mandatory.yaml"}
      - {name: "{{playbook_dir}}/addons/ingress-service-nodeport.yaml"}
      - {name: "{{playbook_dir}}/addons/dashboard-recommended.yaml"}
    - name: Create serviceaccount for dashboard
      k8s:
        name: kubernetes-dashboard
        api_version: v1
        kind: ServiceAccount
        state: present
        namespace: kube-system
        kubeconfig: /root/.kube/config              
    - name: install argo workflow - cluster-role
      k8s:
        state: present
        definition: 
          apiVersion: rbac.authorization.k8s.io/v1beta1
          kind: ClusterRoleBinding
          metadata:
            name: admin-user
          roleRef:
            apiGroup: rbac.authorization.k8s.io
            kind: ClusterRole
            name: cluster-admin
          subjects:
          - kind: ServiceAccount
            name: kubernetes-dashboard
            namespace: kube-system       


  #  -  k8s:                       ## known issue: https://github.com/ansible/ansible/issues/64129
  #      name: ingress-nginx
  #      api_version: v1
  #      kind: Namespace
  #      state: present
  #      kubeconfig: /root/.kube/config       
  #  - name: ingress-mond 
  #    k8s:
  #      state: present
  #      src:  "{{playbook_dir}}/addons/ingress-mandatory.yaml"
  #      kubeconfig: /root/.kube/config
  #  - name: ingress-svc
  #    k8s:
  #      state: present
  #      src:  "{{playbook_dir}}/addons/ingress-service-nodeport.yaml"
  #      kubeconfig: /root/.kube/config

#    - name: install mandatory
#      shell: |
#        kubectl apply -f {{playbook_dir}}/addons/ingress-mandatory.yaml
#      register: std
#    - debug:
#        var: std.stdout_lines
#    - debug:
#        var: std.stderr_lines
#    - name: install ingress
#      shell: |
#        kubectl apply -f {{playbook_dir}}/addons/ingress-service-nodeport.yaml
#      register: std
#    - debug:
#        var: std.stdout_lines
#    - debug:
#        var: std.stderr_lines

    - name: verify ingress install
      shell: |
        sleep 10
        kubectl get pods --all-namespaces -l app.kubernetes.io/name=ingress-nginx 
      register: std
    - debug:
        var: std.stdout_lines
    - debug:
        var: std.stderr_lines
        
    - name: get dashboard login token
      shell: |
        kubectl -n kube-system describe secrets         \
            `kubectl -n kube-system get secrets |       \
             awk '/kubernetes-dashboard/ {print $1}'` | \
             awk '/token:/ {print $2}'
      register: std
    - debug:
        var: std.stdout_lines
    - debug:
        var: std.stderr_lines
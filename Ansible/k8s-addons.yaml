- hosts: master
  tasks:
    - name: install mandatory
      shell: |
        kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/master/deploy/static/mandatory.yaml
      register: std
    - debug:
        var: std.stdout_lines
    - debug:
        var: std.stderr_lines
    - name: install ingress
      shell: |
        kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/master/deploy/static/provider/baremetal/service-nodeport.yaml
      register: std
    - debug:
        var: std.stdout_lines
    - debug:
        var: std.stderr_lines
    - name: verify ingress install
      shell: |
        sleep 10
        kubectl get pods --all-namespaces -l app.kubernetes.io/name=ingress-nginx 
      register: std
    - debug:
        var: std.stdout_lines
    - debug:
        var: std.stderr_lines
    - name: Install Dashboard
      shell: |
        kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/v2.0.0-beta4/aio/deploy/recommended.yaml
      register: std
    - debug:
        var: std.stdout_lines
    - debug:
        var: std.stderr_lines        
    - name: Create serviceaccount for dashboard
      shell: |
        kubectl create sa kubernetes-dashboard -n kube-system
      register: std
    - debug:
        var: std.stdout_lines
    - debug:
        var: std.stderr_lines        
    - name: Create ClusterRoleBinding for dashboard
      shell: |
        kubectl apply -f - <<EOF
        apiVersion: rbac.authorization.k8s.io/v1beta1
        kind: ClusterRoleBinding
        metadata:
          name: admin-user
        roleRef:
          apiGroup: rbac.authorization.k8s.io
          kind: ClusterRole
          name: cluster-admin
        subjects:
        - kind: ServiceAccount
          name: kubernetes-dashboard
          namespace: kube-system
        EOF
      register: std
    - debug:
        var: std.stdout_lines
    - debug:
        var: std.stderr_lines        
    - name: get dashboard login token
      shell: |
        kubectl -n kube-system describe secrets         \
            `kubectl -n kube-system get secrets |       \
             awk '/kubernetes-dashboard/ {print $1}'` | \
             awk '/token:/ {print $2}'
      register: std
    - debug:
        var: std.stdout_lines
    - debug:
        var: std.stderr_lines             
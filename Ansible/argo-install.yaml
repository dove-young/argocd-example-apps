- name: install argo workflow - cluster-role
  k8s:
    state: present
    definition: 
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRoleBinding
      metadata:
        name: kube-system-binding-default
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: ClusterRole
        name: cluster-admin
      subjects:
      - kind: ServiceAccount
        name: default
        namespace: kube-system 
- name: get argo workflow install yaml
  get_url:
    url: https://raw.githubusercontent.com/argoproj/argo/v{{argo.version}}/manifests/install.yaml
    dest: "{{playbook_dir}}/argo/argo-{{argo.version}}-install.yaml"
    force: yes
- name: Create argo namespace
  k8s:
    name: argo
    api_version: v1
    kind: Namespace
    state: present
    kubeconfig: /root/.kube/config 
- name: patch argo workflow installer
  patch:
    src: "{{playbook_dir}}/files/argo-workflow-{{argo.version}}.patch"
    dest: "{{playbook_dir}}/argo/argo-{{argo.version}}-install.yaml"
- k8s:
    state: present
    src: "{{playbook_dir}}/argo/argo-{{argo.version}}-install.yaml"
    kubeconfig: /root/.kube/config
    namespace: argo
- name: argo client
  get_url:
    url: https://github.com/argoproj/argo/releases/download/v{{argo.version}}/argo-linux-amd64
    dest: /usr/local/bin/argo
    mode: 755
    force: yes
#- name: minio install
#  shell: |
#    helm install stable/minio \
#      --name argo-artifacts \
#      --namespace argo \
#      --set service.type=NodePort \
#      --set defaultBucket.enabled=true \
#      --set defaultBucket.name=my-bucket \
#      --set persistence.enabled=true \
#      --set fullnameOverride=argo-artifacts \
#      --debug 2>&1
#  register: std
#- debug:
#    var: std.stdout_lines
#- debug:
#    var: std.stderr_lines    
- name: minio install    ## known issue:  https://github.com/ansible/ansible/issues/64004
  helm:
    host: "{{tiller.endpoint}}"
    port: "{{tiller.port}}"
    chart:
      name: minio
      source:
        type: git
        location: https://github.com/helm/charts.git
        path: stable/minio
    state: present
    name: argo-artifacts
    namespace: argo 
    values:
      service.type: NodePort 
      defaultBucket.enabled: true 
      defaultBucket.name: my-bucket 
      persistence.enabled: true 
      fullnameOverride: argo-artifacts
- name: define ingress for argo-ui
  k8s:
    state: present
    definition:
      apiVersion: extensions/v1beta1
      kind: Ingress
      metadata:
        name: argo-ui-ingress
        namespace: argo
      spec:
        rules:
        - host: argo-ui.{{ groups['master'][0]}}.nip.io
          http:
            paths:
            - backend:
                serviceName: argo-ui
                servicePort: 80 
- name: RBAC     ## https://github.com/argoproj/argo/issues/1723
  k8s:
    state: present
    definition: 
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRoleBinding
      metadata:
        name: argo-default-cluster-admin
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: ClusterRole
        name: cluster-admin
      subjects:
      - kind: ServiceAccount
        name: default
        namespace: argo
    kubeconfig: /root/.kube/config
- name: RBAC     ## https://github.com/argoproj/argo/issues/1723
  k8s:
    state: present
    definition: 
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRoleBinding
      metadata:
        name: default-default-cluster-admin
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: ClusterRole
        name: cluster-admin
      subjects:
      - kind: ServiceAccount
        name: default
        namespace: default
    kubeconfig: /root/.kube/config


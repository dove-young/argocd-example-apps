apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: scripts-bash-
spec:
  entrypoint: bash-script-example
  arguments:
    parameters:
    - name: release
      value: incident-expose
    - name: openresty-ingress-path
      value: incident-expose-incidents
    - name: postgrest-ingress-path
      value: incident-expose-rest
    - name: postgresql-table-name
      value: incidents
    - name: proxy-ip
      value: 9.46.74.217
  volumes:
  - name: vol
    emptyDir: {}
  - name: payload
    configMap:
      name: incident-expose-postgresql-init
      items:
      - key: raw-payload
        path: raw-payload.json
  templates:
  - name: bash-script-example
    steps:
    - - name: populate
        template: populate-incident-data
        arguments:
          parameters:
          - name: TOKEN
            value: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJyb2xlIjoidG9kb191c2VyIn0.pF7fhh4XfCz72LN3YQh-g0GmDy-3vZjQA7AgCD1w9dk"
    - - name: query
        template: query-incident-data

  - name: populate-incident-data
    inputs:
      parameters:
      - name: TOKEN
    script:
      image: 9.46.76.93:5000/alpine:curl
      command: [sh]
      source: |                                         # Contents of the here-script
        cat /tmp/payload/raw-payload.json
        echo
        curl -v -H "Content-Type: application/json" \
         --data-binary "@/tmp/payload/raw-payload.json" \
         {{workflow.parameters.openresty-ingress-path}}.{{workflow.parameters.proxy-ip}}.nip.io/webhook?token={{inputs.parameters.TOKEN}}
      volumeMounts:
        - mountPath: /tmp/payload
          name: payload
         
  - name: query-incident-data
    script:
      image: 9.46.76.93:5000/alpine:curl
      command: [sh]
      source: |
        curl {{workflow.parameters.postgrest-ingress-path}}.{{workflow.parameters.proxy-ip}}.nip.io/{{workflow.parameters.postgresql-table-name}} | wc -l
